services:
  proxy:
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    environment:
      STAGE: local
      DOMAINS: "bun.localtest.me -> http://bun:3000, node.localtest.me -> http://node:3000"
      ERROR_LOG: /var/log/nginx/error.log
      ACCESS_LOG: /var/log/nginx/access.log
      WEBSOCKET: "true"
    volumes: 
      - ./proxy/certs:/var/lib/https-portal
      - ./proxy/conf:/etc/nginx/conf.d
      - ./proxy/nginx-conf/bun.localtest.me.ssl.conf.erb:/var/lib/nginx-conf/bun.localtest.me.ssl.conf.erb:ro
      - ./proxy/nginx-conf/node.localtest.me.ssl.conf.erb:/var/lib/nginx-conf/node.localtest.me.ssl.conf.erb:ro
      - ./proxy/log:/var/log/nginx/
    depends_on:
      - bun
      - node
    networks:
      - bun_network
      - node_network

  bun:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./workspace/bun:/var/www/html
    tty: true
    stdin_open: true
    networks:
      - bun_network

  node:
    image: node:20
    volumes:
      - ./workspace/node:/var/www/html
    tty: true
    stdin_open: true
    networks:
      - node_network

  db_mysql:
    image: mysql:9.0
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./db/mysql:/var/lib/mysql
    networks:
      - bun_network
      - node_network

  db_postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgresql:/var/lib/postgresql
    networks:
      - bun_network
      - node_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  bun_network:
  node_network: